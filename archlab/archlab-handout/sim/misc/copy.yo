                            | # 指令地址从0开始
0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack,%rsp
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     | .quad 0x00a
0x020: b000000000000000     | .quad 0x0b0
0x028: 000c000000000000     | .quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     | .quad 0x111
0x038: 2202000000000000     | .quad 0x222
0x040: 3303000000000000     | .quad 0x333
                            | 
0x048:                      | main: 
0x048: 30f71800000000000000 |     irmovq src, %rdi
0x052: 30f63000000000000000 |     irmovq dest, %rsi
0x05c: 30f10300000000000000 |     irmovq $3, %rcx 
0x066: 807000000000000000   |     call copy_block
0x06f: 90                   |     ret
                            | 
                            | # long copy_block(long *src, long *dest, long len)
0x070:                      | copy_block:
0x070: a08f                 |     pushq %r8   # 因为等下要用到这个，所以我们要记得恢复原样
0x072: a09f                 |     pushq %r9
0x074: a0af                 |     pushq %r10  
0x076: a03f                 |     pushq %rbx  # val = rbx
0x078: 6300                 |     xorq %rax,%rax  # result = rax = 0
0x07a: 30f80800000000000000 |     irmovq $8,%r8
0x084: 30f90100000000000000 |     irmovq $1,%r9
0x08e: 30fa0000000000000000 |     irmovq $0,%r10
                            |     
0x098:                      | loop:
0x098: 61a1                 |     subq %r10,%rcx   # (rcx)len <= 0 -> end
0x09a: 71c800000000000000   |     jle End
0x0a3: 50370000000000000000 |     mrmovq (%rdi),%rbx   #	long val = *src;
0x0ad: 40360000000000000000 |     rmmovq %rbx,(%rsi)   # *dest = val;
0x0b7: 6330                 |     xorq %rbx,%rax  # result ^= val;
0x0b9: 6087                 |     addq %r8,%rdi   # src++
0x0bb: 6086                 |     addq %r8,%rsi   # dest++
0x0bd: 6191                 |     subq %r9,%rcx   # len--;
0x0bf: 709800000000000000   |     jmp loop
                            | 
0x0c8:                      | End:
0x0c8: b03f                 |     popq %rbx
0x0ca: b0af                 |     popq %r10
0x0cc: b09f                 |     popq %r9
0x0ce: b08f                 |     popq %r8
0x0d0: 90                   |     ret 
                            | 
0x200:                      | .pos 0x200
0x200:                      | stack:
