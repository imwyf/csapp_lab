# 指令地址从0开始
    .pos 0
    irmovq stack,%rsp
    call main
    halt

# 3个节点的链表
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0 # 链表结尾，next指针置0

main: 
    irmovq ele1, %rdi
    call rsum_list
    ret

#long rsum_list(list_ptr ls)
rsum_list:
    andq %rdi,%rdi # 检测ls是否为0
    je End
    pushq %r8
    mrmovq (%rdi),%r8   # 取出节点的val
    mrmovq 8(%rdi),%rdi    # ls->next;
    call rsum_list
    addq %r8,%rax   #r8是val，rax是rest
    popq %r8    # ret前记得popq
    ret

End:
    xorq %rax,%rax  # return rax = 0
    ret 

.pos 0x200
stack:
