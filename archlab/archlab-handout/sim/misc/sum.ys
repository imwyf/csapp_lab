# 指令地址从0开始
    .pos 0
    irmovq stack,%rsp
    call main
    halt

# 3个节点的链表
.align 8
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0 # 链表结尾，next指针置0

main: 
    irmovq ele1, %rdi
    call sum_list
    ret

# long sum_list(list_ptr ls)
sum_list:
    pushq %r8   # 因为等下要用到这个，所以我们要记得恢复原样
    xorq %rax,%rax  # rax = 0

loop:
    andq %rdi,%rdi # 检测ls是否为0
    je loopEnd
    mrmovq (%rdi),%r8   # 取出节点的val
    addq %r8,%rax   # val += ls->val
    mrmovq 8(%rdi),%rdi    #ls = ls->next;
    jmp loop

loopEnd:
    popq %r8
    ret 

.pos 0x200
stack:
